name: CD
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Override version"
        required: false
        default: ""
  schedule:
    - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check latest Underscore version
        if: ${{ github.event_name != 'workflow_dispatch' }}
        run: |
          npm ci 
          echo "up_to_date=$(npm outdated underscore --parseable)" >> $GITHUB_ENV
      - name: Update Underscore
        if: ${{ env.up_to_date != '' && github.event.inputs.version == '' }}
        run: |
          npm i -D underscore@latest -E
          echo "underscore_version=$(npm show underscore@latest version)" >> $GITHUB_ENV
          cp package.json package.json.bak
      - name: Set version manually
        if: ${{ github.event.inputs.version != '' }}
        run: |
          npm ci
          echo "up_to_date=manualOverride" >> $GITHUB_ENV
          echo "underscore_version=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          cp package.json package.json.bak
      - name: Build ESM
        if: ${{ env.up_to_date != '' }}
        run: |
          pkgjson="$(jq '.type|= "module"' package.json)"
          echo "${pkgjson}" > package.json
          rm tsconfig.json
          cp tsconfig.esm.json tsconfig.json
          npx @vercel/ncc build index.ts -o dist/esm -m
          mv dist/esm/index.js dist/esm/index.mjs
      - name: Build CommonJS
        if: ${{ env.up_to_date != '' }}
        run: |
          pkgjson="$(jq '.type|= "commonjs"' package.json)"
          echo "${pkgjson}" > package.json
          cp tsconfig.cjs.json tsconfig.json
          npx @vercel/ncc build index.ts -o dist/cjs -m
          mv dist/cjs/index.js dist/cjs/index.cjs
      - name: Publish
        if: ${{ env.up_to_date != '' }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          rm package.json
          mv package.json.bak package.json
          git config --global user.email action@github.com
          git config --global user.name GitHub Action
          npm version ${{ env.underscore_version }} -f -m "release v%s"
          git push
          git push --tags
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
          npm publish
